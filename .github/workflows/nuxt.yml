# Sample workflow for building and deploying a Nuxt site to GitHub Pages
#
# To get started with Nuxt see: https://nuxtjs.org/docs/get-started/installation
#
name: Deploy Nuxt site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Install dependencies
        run: |-
          corepack enable
          pnpm install --shamefully-hoist
      - name: Static HTML export with Nuxt
        run: pnpm run generate
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./.output/public
      - name: Setup Rclone
        uses: AnimMouse/setup-rclone@v1
        env:
          RCLONE_S3_ACCESS_KEY_ID: ${{ secrets.TENCENT_CLOUD_SECRET_ID }}
          RCLONE_S3_SECRET_ACCESS_KEY: ${{ secrets.TENCENT_CLOUD_SECRET_KEY }}
        with:
          rclone_config: ${{ secrets.RCLONE_CONFIG }}
      - name: Deploy to Tencent COS
        run: -|
          rclone sync ./.output/public cos:/
